input {
  beats {
    port => 516
  }
}


filter {

  mutate {
    remove_field => [ "host" ]
  }

  if "portal" in [kubernetes][container][name] {

    if "stdout" in [stream] {
      grok {
        patterns_dir => ["/usr/share/logstash/config/patterns"]
        match => { "message" => "%{NGINX_ACCESS}" }
        add_tag => "grokparsesuccess"
      }
    }

    if "stderr" in [stream] {
      grok {
        patterns_dir => ["/usr/share/logstash/config/patterns"]
        match => { "message" => "%{NGINX_ERROR}" }
        add_tag => "grokparsesuccess"
      }
    }
  }

  if "apigw-ext" in [kubernetes][container][name] {

    if "stdout" in [stream] {
      grok {
        patterns_dir => ["/usr/share/logstash/config/patterns"]
        match => { "message" => "%{APIGW}" }
        add_tag => "grokparsesuccess"
      }
    }
  }

  if "apigw-int" in [kubernetes][container][name] {
    
    if "stdout" in [stream] {
      grok {
        patterns_dir => ["/usr/share/logstash/config/patterns"]
        match => { "message" => "%{APIGW}" }
        add_tag => "grokparsesuccess"
      }
    }
  }

  if "auth" in [kubernetes][container][name] {

    if ("message" =~ "Response Details: Http Code:") {
       grok {
         patterns_dir => ["/usr/share/logstash/config/patterns"]
         match => { "message" => "%{AUTH_RESPONSEDETAILS}"}
         add_tag => "grokparsesuccess"
         add_tag => "parsedbyAUTH_RESPONSEDETAILS"
       }
    }

    if ("message" !~ "Response Details: Http Code:") {
       grok {
         patterns_dir => ["/usr/share/logstash/config/patterns"]
         match => { "message" => "%{AUTH}"}
         add_tag => "grokparsesuccess"
         add_tag => "parsedbyAUTH"
      }
    }
  }

  if "config" in [kubernetes][container][name] {

    if ("message" =~ "Response Details: Http Code:") {
       grok {
         patterns_dir => ["/usr/share/logstash/config/patterns"]
         match => { "message" => "%{CONFIG_RESPONSEDETAILS}"}
         add_tag => "grokparsesuccess"
         add_tag => "parsedbyCONFIG_RESPONSEDETAILS"
       }
    }

    if ("message"  =~ "Request Details: Http Method:") {
       grok {
         patterns_dir => ["/usr/share/logstash/config/patterns"]
         match => { "message" => "%{CONFIG_REQUESTDETAILS}"}
         add_tag => "grokparsesuccess"
         add_tag => "parsedbyCONFIG_REQUESTDETAILS"
       }
    }

    if ("message" !~ " Details: Http ") {
       grok {
         patterns_dir => ["/usr/share/logstash/config/patterns"]
         match => { "message" => [ "%{CONFIG}", "%{CONFIG_AL}" ] }
         add_tag => "grokparsesuccess"
         add_tag => "parsedbyCONFIG"
       }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
  }
}